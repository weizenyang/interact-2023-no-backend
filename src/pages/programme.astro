---
import Navbar from "@source/components/Navbar.astro";
import Layout from "@source/layouts/Layout.astro";
import Footer from "@source/components/Footer.astro";
import TimelineItem from "@source/components/TimelineItem.astro";
import PreFooterModular from "@source/components/PreFooterModular.astro";

const files = await Astro.glob("/src/data/timetable_data/*.json");
---

<Layout title="Interact 2023">
	<main>
		<Navbar />
		<content>
			<section class="programmes-section-1">
				<div class="title">
					<h1 id="programmes-nav-trigger">PROGRAMMES</h1>
				</div>
			</section>

			<div class="programmes-nav" id="programmes-nav">
				<a href="#day-1" class="programmes-nav-button">Day 1</a>
				<a href="#day-2" class="programmes-nav-button">Day 2</a>
				<a href="#day-3" class="programmes-nav-button">Day 3</a>
				<a href="#day-4" class="programmes-nav-button">Day 4</a>
				<a href="#day-5" class="programmes-nav-button">Day 5</a>
			</div>
			<section class="programmes-section-2">
				{
					files.map((e) => (
						<div class="timetable" id={"day-" + e.day}>
							<div class="top">
								<h2 class="date">
									Day {e.day}: {e.date}
								</h2>
							</div>
							<div class="bottom">
								<div class="item-container">
									{e.data.map((timeslot) => (
										<TimelineItem
											or={timeslot.or}
											time={timeslot.time}
											name={timeslot.item.map((data) => ({
												text: data.text,
												author: data.author,
												location: data.location,
												hasInfo: data.hasInfo,
												info: data.info,
												contact: data.contact
											}))}
										/>
									))}
								</div>
							</div>
						</div>
					))
				}
			</section>
			<section class="programmes-section-2">
				<PreFooterModular
					title="CHECK OUT:"
					buttons={[
						{ text: "All Workshops", href: "/workshops/0" },
						{ text: "All Keynotes", href: "/keynotes" },
					]}
				/>
			</section>

			<section class="popup">
				<div class="info-card">
					<div class="info-card-top">
						<button class="info-card-button prev-button"> < </button>
						<div class="session-info">
							<p class="session-title">
								Some Text Here: Here Too
							</p>
							<p class="session-time">
								Some Text Here: Here Too
							</p>
						</div>
						<button class="exit" id="exit">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="#000000"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="feather feather-x"
								><line x1="18" y1="6" x2="6" y2="18"
								></line><line x1="6" y1="6" x2="18" y2="18"
								></line></svg
							>
						</button>
						<button class="info-card-button next-button"> ></button>
					</div>
					<article class="details">
						<div class="content-1 sc" id="details">
							<button class="exit" id="exit">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									width="24"
									height="24"
									viewBox="0 0 24 24"
									fill="#000000"
									stroke="currentColor"
									stroke-width="2"
									stroke-linecap="round"
									stroke-linejoin="round"
									class="feather feather-x"
									><line x1="18" y1="6" x2="6" y2="18"
									></line><line x1="6" y1="6" x2="18" y2="18"
									></line></svg
								>
							</button>
						</div>
					</article>
				</div>

				<!-- <div class="info-card">
					<article class="details" id="details">
						<h1>Some Title</h1>
						<button class="exit" id="exit">
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#000000" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
						</button>
					</article>
				</div> -->
			</section>
		</content>
	</main>

	<Footer />
</Layout>

<script>
	var currentIndex = 0;
	//Lookup system to get elements with templates
	var templates = {};
	var elements = [];
	var key = 0;
	document.querySelectorAll(".hasInfo").forEach((e) => {
		if (e.querySelector("template")) {
			templates[key] = e;
			key++;
		}
	});
	console.log(templates);

	function highlight(target) {
		
		document.querySelectorAll(".animate-highlight").forEach((e) => {
			e.classList.remove("animate-highlight");
		});
		if (target != 'a') {
			console.log("Highlight")
			let url = window.location.href;
			let getID = url.split("#")[1];
			if (document.getElementById(getID) != null) {
				document
					.getElementById(getID)
					.classList.add("animate-highlight");
				console.log("Get ID " + document.getElementById(getID));
			}
		} else {
			document
				.querySelector("[scroll-target]")
				.classList.add("animate-highlight");
		}
	}
	highlight();
	window.addEventListener("hashchange", (e) => {
		highlight();
	});

	const quickNav = document.getElementById("programmes-nav");
	const quickNavTrigger = document.getElementById("programmes-nav-trigger");
	window.addEventListener("scroll", (e) => {
		if (quickNav && quickNavTrigger) {
			if (window.innerWidth > 830) {
				if (quickNavTrigger.getBoundingClientRect().bottom <= 1) {
					quickNav.classList.add("detach");
					quickNavTrigger.classList.add("programmes-nav-trigger");
				} else {
					quickNav.classList.remove("detach");
					quickNavTrigger.classList.remove("programmes-nav-trigger");
				}
			} else {
				if (quickNavTrigger.getBoundingClientRect().bottom <= 70) {
					quickNav.classList.add("detach");
					quickNavTrigger.classList.add("programmes-nav-trigger");
				} else {
					quickNav.classList.remove("detach");
					quickNavTrigger.classList.remove("programmes-nav-trigger");
				}
			}
		}
	});

	// document.querySelectorAll(".info-card-button").forEach((e) => {
	// 	e.addEventListener('click', (e) => {
	// 		e.stopPropagation()
	// 	})
	// })

	document.getElementById("exit").addEventListener("click", () => {
		document.querySelector(".popup").classList.remove("popup-show");
		document.querySelector(".info-card").classList.remove("info-card-show");
		highlight("a");
	});

	document.querySelector(".session-title").addEventListener("click", () => {
		document.querySelector(".popup").classList.remove("popup-show");
		document.querySelector(".info-card").classList.remove("info-card-show");
	});

	document.querySelectorAll(".hasInfo").forEach((e) => {
		const template = e.querySelector("template");
		if (template) {
			//Enable popup
			e.addEventListener("click", () => {
				document.querySelector(".session-title").innerText =
					e.querySelector(".session-name").innerText;

				document.querySelector(".session-time").innerText =
					template.getAttribute('data-time');

				//Get Keys to update index
				const findKey = Object.keys(templates).find(
					(thiskey) => 
						templates[thiskey].querySelector("template").dataset.session === e.querySelector(".session-name").innerText
				);

				console.log(e.querySelector(".session-name").innerText)

				currentIndex = parseInt(findKey);
				console.log(currentIndex)
				

				scrollToTarget(e.querySelector(".session-name").innerText);
				document.querySelector(".popup").classList.add("popup-show");
				document
					.querySelector(".info-card")
					.classList.add("info-card-show");
				document.querySelector(".details").scrollTop = 0;

				//Append template content to popup
				const content = template.content.cloneNode(true);
				console.log("Content " + content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);

				updateButtons();
			});
		}
	});

	document.querySelectorAll(".next-button").forEach((e) => {
		e.addEventListener("click", () => {
			console.log(currentIndex)
			if (templates[currentIndex + 1] != undefined) {
				
				currentIndex++
				console.log(currentIndex)
				const template = templates[currentIndex].querySelector("template");

				document.querySelector(".session-title").innerText =
					template.getAttribute("data-session");
				document.querySelector(".session-time").innerText =
					template.getAttribute('data-time');
				scrollToTarget(template.getAttribute("data-session"));
				const content = template.content.cloneNode(true);
				console.log(content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);
				updateButtons();
			} else {
				console.log("Fail")
				console.log(templates[currentIndex + 1]);
			}
		});
	});

	document.querySelectorAll(".prev-button").forEach((e) => {
		e.addEventListener("click", () => {
			if (templates[currentIndex - 1] != undefined) {
				console.log("Prev")
				currentIndex--;
				const template =
					templates[currentIndex].querySelector("template");
				document.querySelector(".session-title").innerText =
					template.getAttribute("data-session");
				document.querySelector(".session-time").innerText =
					template.getAttribute('data-time');
				scrollToTarget(template.getAttribute("data-session"));
				const content = template.content.cloneNode(true);
				console.log(content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);
				updateButtons();
			} else {
				console.log("Fail")
				console.log(currentIndex);
			}
		});
	});

	let timeoutId;
	let intervalId;
	document.querySelectorAll(".prev-button").forEach((e) => {
			//Click and hold to cycle

	element.addEventListener('mousedown', () => {
	timeoutId = setTimeout(() => 
		intervalId = setInterval(() => {
			if (templates[currentIndex - 1] != undefined) {
				console.log("Prev")
				currentIndex--;
				const template =
					templates[currentIndex].querySelector("template");
				document.querySelector(".session-title").innerText =
					template.getAttribute("data-session");
				document.querySelector(".session-time").innerText =
					template.getAttribute('data-time');
				scrollToTarget(template.getAttribute("data-session"));
				const content = template.content.cloneNode(true);
				console.log(content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);
				updateButtons();
			} else {
				console.log("Fail")
				console.log(currentIndex);
			}
		}, 200)
	, 1000);
	});

	element.addEventListener('mouseup', () => {
	clearTimeout(timeoutId);
	});

	});



	function updateButtons() {
		//Lookup system
		const findKey = Object.keys(templates).find(
			(key) =>
				templates[key].querySelector("template").dataset.session ===
				document.querySelector(".session-title").innerText
		);

		if (findKey < 1) {
			document.querySelectorAll(".prev-button").forEach((e) => {
				if (!e.classList.contains("clamp")) {
					e.classList.add("clamp");
				}
			});

			document.querySelectorAll(".next-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
		} else if (findKey >= Object.keys(templates).length - 1) {
			document.querySelectorAll(".prev-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
			document.querySelectorAll(".next-button").forEach((e) => {
				if (!e.classList.contains("clamp")) {
					e.classList.add("clamp");
				}
			});
		} else {
			document.querySelectorAll(".next-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
			document.querySelectorAll(".prev-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
		}
	}

	function scrollToTarget(data) {
		document.querySelectorAll("template").forEach((e) => {
			if (e.getAttribute("data-session") == data) {
				document.querySelectorAll("[scroll-target]").forEach((e) => {
					e.removeAttribute("scroll-target");
				});
				e.parentElement.setAttribute("scroll-target", "");
				document.querySelector("[scroll-target]").scrollIntoView();
			}
		});
	}
</script>

<style>
	* {
		margin: 0%;
	}

	.popup {
		position: fixed;
		display: flex;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1em 0em;
		background: #002c38;
		background-color: rgba(0, 0, 0, 0.5);
		display: flex;
		z-index: 100;
		pointer-events: none;
		top: 0%;
		scale: 1;
		opacity: 0;
		transition: opacity 0.5s, top 0.5s ease-in-out, scale 0.2s ease-out;
		justify-content: center;
	}

	.popup-show {
		top: 0%;
		scale: 1;
		opacity: 1;
		pointer-events: auto;
	}

		.clamp {
			color: #002c3822 !important;
			pointer-events: none;
		}


		.info-card {
			position: fixed;
			top: 100%;
			left: 50%;
			transform: translateX(-50%) translateY(-50%);
			display: flex;
			flex-direction: column;
			background-color: #fcf7eb;
			max-width: 700px;
			width: 100%;
			height: 85%;
			max-height: 1100px;
			transition: opacity 0.1s, top 0.4s;
			border-radius: 30px;
			
		}

		.info-card {
			padding: 0em;
		}

		.info-card-top {
			display: flex;
			width: 100%;
			/* border: 1px solid #002c38; */
		}

		.info-card-button {
			padding: 1em;
			color: #002c38;
			/* border: #002c38 1px solid; */
			border-radius: 2px;
			background-color: #00000000;
		}

		.info-card-show {
			top: 50%;
			left: 50%;
			transform: translateX(-50%) translateY(-50%);
			scale: 1;
			opacity: 1;
			pointer-events: all;
		}

		.info-card-button:first-child {
			border-right: 1px solid #002c38;
			border-bottom: 1px solid #002c38;
		}
		.info-card-button:nth-child(4) {
			border-left: 1px solid #002c38;
			border-bottom: 1px solid #002c38;
		}

		.session-info{
			display: flex;
			flex-direction: column;
			padding: 0.5em;
			width: 100%;
			border-left: 0px;
			border-right: 0px;
			align-items: center;
			border-bottom: 1px solid #002c38;

		}

		.session-title {
			width: 100%;
			display: flex;
			font-weight: 1000;
			align-items: center;
		}

		.session-time{
			width: 100%;
			font-size: medium;
		}

		.exit{
			border-bottom: 1px solid #002c38;
			border-radius: 0px;
		}

		.content-1 {
			padding: 2em;
			padding-top: 0%;
			overflow-y: scroll;
			height: 100%;
			/* border: #002c38 1px solid; */
			border-top: 0px;
		}

	.nav-offset {
		position: relative;
		top: -150px;
	}

	.programmes-nav-trigger {
		margin-bottom: 80px !important;
	}

	.programmes-nav {
		position: relative;
		display: flex;
		background-color: var(--color-bg);
		width: calc(100vw - 14em);
		margin: 0%;
		padding: 1em;
		padding-left: 2em;
		padding-right: 2em;
		z-index: 100;
	}

	.programmes-nav p {
		width: 100%;
		max-width: 100px;
		display: flex;
		text-align: left;
		align-items: center;
		justify-content: left;
	}

	.programmes-nav-button {
		position: relative;
		display: flex;
		flex-direction: row;
		width: 100%;
		max-width: 100px;
		align-items: center;
		justify-content: center;
		margin: 0em 0.3em;
		padding: 0.5em;
		font-weight: bold;
		font-size: 0.9em;
		border-radius: 10px;
		border: 2px solid #002c38;
	}

	.programmes-nav-button:focus {
		background-color: #002c3844;
	}

	

	.detach {
		position: fixed;
		top: 0px;
		border-bottom: 1px solid #002c38;
	}

	.line {
		width: 5px;
		border-left: solid 5px #002c38;
		border-radius: 5px;
		margin-top: 1em;
		margin-right: 0.5em;
		margin-bottom: 3em;
	}

	.left {
		left: -100%;
	}

	.right {
		right: 100%;
	}

	.timetable {
		margin-top: 1em;
		margin-bottom: 1em;
		scroll-margin-top: 15vh;
		border-radius: 15px;
		padding: 1em;
		position: relative;
		width: calc(50% - 1em);
		display: flex;
		flex-direction: column;
		background-color: #fffcf9aa;
		box-shadow: 0px 0px 50px #00000011;
	}

	.timetable:nth-child(odd) {
		margin-right: 1em;
	}
	.timetable:nth-child(even) {
		margin-left: 1em;
	}

	.bottom {
		display: flex;
	}

	.date {
		font-weight: ;
		margin-bottom: 0.5em;
	}

	content {
		border-bottom: 1px solid #002c38;
	}

	p a {
		text-decoration: underline !important;
	}

	#details::-webkit-scrollbar {
		width: 5px;
	}

	/* Track */
	#details::-webkit-scrollbar-track {
		background: #002c3844;
		border-radius: 10px;
	}

	/* #details::-webkit-scrollbar-track:hover{
	background: #ffffff33;
	} */

	/* Handle */
	#details::-webkit-scrollbar-thumb {
		background-color: #002c38;
		border-radius: 10px;
	}

	/* Handle on hover */
	#details::-webkit-scrollbar-thumb:hover {
		background: #555;
	}

	main {
		display: flex;
		flex-direction: row;
		overscroll-behavior: none;
		/* overflow-y: scroll */
		/* height: 300vh;
		padding-left: 14em; */
		/* margin-left: 14em; */
		/* position: absolute; */
	}

	label {
		font-family: "AH-B";
	}

	content {
		width: 100%;
	}

	.solid-line {
		width: 100%;
		border-top: 2px solid #002c38;
	}

	.hover-popup {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1em 0em;
		background: #002c38;
		background-color: rgba(0, 0, 0, 0.5);
		display: flex;
		z-index: 100;
		pointer-events: none;
		top: 0%;
		scale: 1;
		opacity: 0;
		transition: opacity 0.5s, top 0.5s ease-in-out, scale 0.2s ease-out;
		justify-content: center;
	}

	.popup {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1em 0em;
		background: #002c38;
		background-color: rgba(0, 0, 0, 0.5);
		display: flex;
		z-index: 100;
		pointer-events: none;
		top: 0%;
		scale: 1;
		opacity: 0;
		transition: opacity 0.5s, top 0.5s ease-in-out, scale 0.2s ease-out;
		justify-content: center;
	}

	.popup-show {
		top: 0%;
		scale: 1;
		opacity: 1;
		pointer-events: auto;
	}



	#workshop-description {
		display: flex;
		flex-direction: column;
		/* margin-right: 1em; */
		padding-right: 1em;
	}

	.info-card h1 {
		padding-bottom: 0.5em;
		margin: 0px;
		font-size: 2em;
		height: min-content;
	}

	.info-card h2 {
		padding: 0em;
		padding-bottom: 0.2em;
		margin: 0px;
		font-size: 1.3em;
		height: min-content;
		font-weight: 100;
	}

	.details {
		overflow-y: hidden;
		height: 100%;
	}

	.programmes-section-1 {
		padding: 2em;
	}

	.programmes-section-2 {
		display: flex;
		padding: 2em;
		flex-wrap: wrap;
		max-width: 1800px;
		border-bottom: 1px solid #002c38;
	}

	.programmes-section-2:last-child {
		border-bottom: 0px solid #002c38;
	}

	.exit {
		display: flex;
		position: relative;
		background-color: #00000000;
		color: #002c38;
		align-items: center;
	}

	.center {
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	.button-padding h2 {
		padding: 0.1em 1em;
		border-radius: 50px;
	}

	.center * {
		margin: auto;
	}

	.sub-types {
		background-color: #002c38;
		color: #fcf7eb;
		border-radius: 30px;
		padding: 0.5em 0em 0.5em 0em;
		margin-bottom: 1em;
		margin-top: 1em;
		display: flex;
		flex-direction: column;
		/* width: max-content; */
		/* height: 100%; */
		/* width: 100%; */
	}

	.selection-grid {
		display: grid;
		width: 100%;
		gap: 1em;
		max-width: 1200px;
		grid-template-columns: 1fr 1fr;
		padding: 1em;
		flex-wrap: wrap;
	}

	.items {
		display: block;
	}

	.items p {
		/* display: flex; */
		margin: 0px;
	}

	.no-margin {
		margin: 0px;
		padding: 0px;
	}

	.no-margin * {
		margin: 0px !important;
		padding: 0px;
	}

	p strong {
		/* all: unset; */
		display: flex;
		width: max-content;
		padding: 0px;
		padding-right: 0.4em;
		font-size: 1em;
	}

	.sub-types h3 {
		margin: 0px;
		padding: 0.2em;
		padding-left: 1em;
		padding-bottom: 0.5em;
		font-family: "AH-B";
	}

	.sub-details {
		display: flex;
		flex-direction: column;
		justify-content: center;
		/* padding-left: 1em; */
	}

	.submissions {
		position: relative;
		justify-content: center;
		align-items: center;
	}

	.input-field {
		padding-top: 1em;
		display: flex;
		flex-direction: column;
		width: 50%;
	}

	.input-field input,
	.input-field textarea {
		all: unset;
		padding: 0.5em;
		border-radius: 0.5em;
		border: 2px solid #002c38;
		font-family: sans-serif;
	}

	.input-field label {
		padding-bottom: 0.2em;
	}

	.link-card p {
		margin: 0%;
	}

	.contact-details h4 {
		margin: 0%;
		font-family: "AH-B";
	}

	.contact-details p {
		margin-top: 0%;
	}

	.juries-details {
		display: flex;
	}

	.juries-section {
		display: flex;
		display: block;
		align-content: space-between;
		padding-bottom: 4em;
	}

	.juries-section:last-child {
		display: flex;
		display: block;
		align-content: space-between;
		padding-bottom: 0%;
	}

	.text-details {
		justify-content: center;
		align-content: center;
		text-align: center;
	}

	.nav-container {
		width: 14em;
	}

	.img-mask {
		max-height: 450px;
		overflow: hidden;
	}

	.rch {
		width: 100%;
		/* max-height: 473px; */
		object-fit: cover;
	}

	.stretch {
		box-sizing: border-box;
		display: flex;
		width: 100%;
		/* height: 100%; */
	}

	.pill {
		font-family: "AH-B";
		font-size: 1em;
		margin: 0px;
		display: flex;
		padding: 0.2em 0.5em 0.2em 0.5em;
		background-color: #002c38;
		color: #fcf7eb;
		border-radius: 50px;
		align-items: center;
		width: fit-content;
	}

	.pill img {
		margin: 0%;
		padding-right: 0.5em;
		width: 1em;
		height: 1em;
	}

	.location-detail {
		align-items: flex-end;
		margin-top: auto;
		margin-bottom: 0%;
		margin-left: 2em;
		white-space: nowrap;
		width: max-content;
	}

	.title {
		font-family: "SYNCOPATE";
		/* height: 50%; */
		padding: 0em;
		/* padding-bottom: 3em; */
		margin: 0%;
		font-size: 1em;
		/* overflow: hidden; */
		/* width: 200%; */
	}

	.title h1 {
		margin: 0%;
		padding: 0%;
		font-size: 2.5em;
	}

	.conditions {
		padding-top: 2em;
	}

	/* Presets */

	.bold {
		font-family: "AH-B";
	}

	.thin {
		font-family: "S-R";
	}

	@media screen and (max-width: 1300px) {
		.popup {
			padding: 0%;
			position: fixed;
			border-radius: 0px;
			z-index: 10000;
		}

		.programmes-nav {
			padding: 1em;
		}

		.info-card {
			width: 100%;
			border-radius: 30px;
		}

		.selection-grid {
			display: grid;
			width: 100%;
			gap: 1em;
			grid-template-columns: 1fr;
			padding: 1em;
			flex-wrap: wrap;
		}
		.programmes-section-1 {
			padding: 1em;
		}

		.title {
			font-size: 0.8em;
		}

		.programmes-section-2 {
			padding: 1em;
		}

		.timetable {
			width: 100%;
		}

		.timetable:nth-child(odd) {
			margin-right: 0em;
		}
		.timetable:nth-child(even) {
			margin-left: 0em;
		}
		.content-1 {
			padding: 2em;
			padding-top: 0em;
			overflow-y: scroll;
			height: 100%;
			/* border: #002c38 1px solid; */
			border-top: 0px;
		}
		
	}

	@media (max-width: 829px) {
		.info-card {
			padding: 0em;
			border-radius: 0px;
			height: 100%;
			max-height: 100vh;
		}

		.info-card-top {
			display: flex;
			width: 100%;
			border: 1px solid #002c38;
		}

		.info-card-button {
			padding: 1em;
			color: #002c38;
			/* border: #002c38 1px solid; */
			border-radius: 2px;
			background-color: #00000000;
		}

		.info-card-button:first-child {
			border-right: 1px solid #002c38;
		}
		.info-card-button:nth-child(4) {
			border-left: 1px solid #002c38;
		}
		.session-title {
			display: flex;
			align-items: center;
			padding: 0.5em;
			width: 100%;
			border-left: 0px;
			border-right: 0px;
			border-bottom: 0px;
		}
		.content-1 {
			padding: 2em;
			padding-top: 0%;
			overflow-y: scroll;
			height: 100%;
			border: #002c38 1px solid;
			border-top: 0px;
		}
		.time {
			padding: 0.5em;
			padding-left: 0.5em;
			padding-right: 0.5em;
		}

		.programmes-nav {
			position: relative;
			display: flex;
			background-color: var(--color-bg);
			width: 100%;
			margin: 0%;
			padding: 0em 1em;
			z-index: 100;
		}

		.programmes-nav p {
			padding-left: 1em;
			width: 100%;
			display: flex;
			text-align: left;
			align-items: center;
			justify-content: left;
		}

		.title {
			font-size: 0.8em;
		}

		.programmes-nav-button {
			position: relative;
			display: flex;
			flex-direction: row;
			width: 100%;
			align-items: center;
			justify-content: center;
			margin: 0em 0.3em;
			padding: 0.5em 0.3em;
			font-weight: bold;
			font-size: 0.9em;
			border-radius: 10px;
			border-right: 1px solid #002c38;
		}

		.clamp {
			color: #002c3855;
			pointer-events: none;
		}

		.detach {
			padding-top: 0.2em;
			padding-bottom: 1em;
			position: fixed;
			top: 76px;
		}

		.timetable:nth-child(odd) {
			margin-right: 0em;
		}
		.timetable:nth-child(even) {
			margin-left: 0em;
		}

		.content-1 {
			padding: 2em;
			padding-top: 0%;
			overflow-y: scroll;
			height: 100%;
			border: #002c38 1px solid;
			border-top: 0px;
		}
	}
</style>
