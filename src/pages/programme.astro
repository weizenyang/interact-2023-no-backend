---
import Navbar from "@source/components/Navbar.astro";
import Layout from "@source/layouts/Layout.astro";
import Footer from "@source/components/Footer.astro";
import TimelineItem from "@source/components/TimelineItem.astro";
import PreFooterModular from "@source/components/PreFooterModular.astro";

const files = await Astro.glob("/src/data/timetable_data/*.json");
const algoliaKey = await import.meta.env.ALGOLIA_API_KEY;
---

<Layout title="Interact 2023">
	<main>
		<Navbar />
		<content>
			<!-- <astro-typewriter data-messages={algoliaKey} >
				<div id="#writer" />
			</astro-typewriter> -->
			<div class="search-box input-field">
				<div style="display: flex;">
					<div id="search" style="width: 100%">
						<input type="text" placeholder="Search from 150 results" id="searchTextBox"></input>
						<p id="resultCount"></p>
						
					</div>
					<button id="exit-search" style="padding: 0.5em; width: 40px; text-align: center; font-family: 'AH-R'; font-size: 1.2em; line-height: 1em; border-radius: 10px; margin-left: 10px;">X</button>
				</div>
				<div id='result'></div>

				
			</div>

			<button class="search" id="toggle-search"><img src="/search.svg" width="30px" height="30px">Search</button>
			
			<script>
				import algoliasearch from 'algoliasearch'
			
				const searchBox = document.getElementById("searchTextBox");
				const resultBox = document.getElementById("result");
				var searchInstance
				var resultCount;
				// const key = {algoliaKey}
				const client = algoliasearch('IVW7HXZDVM', "0242aba5672be09c70dc2288d7b9ea5f");
				searchBox.addEventListener('input', (e) => {
					if(searchInstance){
						clearTimeout(searchInstance);
					}
					const index = client.initIndex('timetable')
					// const record = { objectID: 1, name: 'test_record' }
					// index.saveObject(record).wait()
			
					const style = document.createElement("style");
							style.textContent = `
							.item:hover {
								background-color: #FFC22322;
								text-decoration: none;
							}
							`;

					
					// Search the index and print the results
					searchInstance = setTimeout(() => {
						
						resultCount = 0;
						resultBox.innerHTML = "";
						resultBox.appendChild(style);
						index
						.search(searchBox.value)
						.then(({ hits }) => 
						hits.forEach((e) => {
							console.log(e);
							resultCount++;
							document.getElementById("resultCount").innerText = resultCount + " results";
			
							const container = document.createElement('a');
							container.className = "item"
							container.style = "cursor:pointer; display:flex; margin: 0px; flex-direction: column; padding: 1em 0.5em; border-bottom: solid 1px #002C3855";
							// container.href = "/programme?q=" + encodeURI(e.title)
							container.addEventListener('click', () => {
							
							const url = new URL(window.location);
							const urlParams = new URLSearchParams(url.search);
							if(urlParams.get('q')){
								urlParams.delete("q")
							}
							url.searchParams.set(
								"q",
								encodeURI(e.text)
							);
							console.log('clicked')
							history.pushState({}, "", url);
							var popStateEvent = new PopStateEvent ('popstate', {});
							dispatchEvent (popStateEvent);

							// findDataFromUrl();
							})
			
			
							
			
							const dataContainer = document.createElement('div');
							dataContainer.style = "height: 30px; margin-bottom: 0.3em;";
							if(e.id){
							const id = document.createElement('p');
							id.innerHTML = e._highlightResult.id.value;
							id.style = "display:inline; margin-right: 0.5em; font-size: 0.8em; background-color: #002C38; color: var(--color-bg); padding: 0.3em 0.6em; border-radius: 20px; text-decoration: none;"
							dataContainer.appendChild(id);
							}
			
							const day = document.createElement('p');
							day.innerHTML = "Day " + e._highlightResult.day.value + ", " + e._highlightResult.date.value
							day.style = "display:inline; margin-right: 0.5em; font-size: 0.8em; background-color: #00000000; color: var(--color-text); border: solid 2px var(--color-text); padding: 0.3em 0.6em; border-radius: 20px; text-decoration: none !important;"
							dataContainer.appendChild(day);
			
							const time = document.createElement('p');
							time.innerHTML = e.time
							time.style = "display:inline; margin: 0px; font-size: 0.8em; background-color: #00000000; color: var(--color-text); border: solid 2px var(--color-text); padding: 0.3em 0.6em; border-radius: 20px; text-decoration: none !important;"
							dataContainer.appendChild(time);
			
							container.appendChild(dataContainer);
			
							const title = document.createElement('h3');
							title.style = "display:inline; margin: 0px; font-size: 1.2em; font-family: AH-R;"
							if(e.title){
								title.innerHTML = e._highlightResult.title.value
								container.appendChild(title);
							} else if(e.text){
								title.innerHTML = e._highlightResult.text.value
								container.appendChild(title);
							}
							
							if(e.authors){
								const authors = document.createElement('p');
								authors.style = "display:inline; font-size: 0.8em; border-radius: 20px;"
								authors.innerHTML = "by " + e._highlightResult.authors.value;
								container.appendChild(authors);
							}
			
							
							
			
							// const id = document.createElement('p');
							// id.textContent = e.id;
			
							resultBox.appendChild(container);
							container.querySelectorAll('em').forEach((e) => {
								e.style.cssText = "font-size: 1em; font-family: AH-R; border-radius: 2px; text-decoration: underline; text-decoration-style: dotted;"
							})
			
						})
						)
					}, 500);
					
				})
				
			</script>
			<section class="programmes-section-1">
				<div class="title">
					<h1 id="programmes-nav-trigger">PROGRAMME</h1>
				</div>
				<a class="hollow-button pdf-version" href="/INTERACT programme v1.pdf" target="_blank"><img src="/pdf.svg">PDF version</a>
			</section>

			<div class="programmes-nav" id="programmes-nav">
				<a href="#day-1" class="programmes-nav-button" id="button-day-1"
					>Day 1</a
				>
				<a href="#day-2" class="programmes-nav-button" id="button-day-2"
					>Day 2</a
				>
				<a href="#day-3" class="programmes-nav-button" id="button-day-3"
					>Day 3</a
				>
				<a href="#day-4" class="programmes-nav-button" id="button-day-4"
					>Day 4</a
				>
				<a href="#day-5" class="programmes-nav-button" id="button-day-5"
					>Day 5</a
				>
			</div>
				<div class="updates">
					<strong>Update:</strong> To find out when your paper is scheduled, search the list of sessions, papers and authors in the pdf below:
					<br><br>
					<a class="hollow-button pdf-version" href="/INTERACT sessions papers.pdf" target="_blank"><img src="/pdf.svg">INTERACT sessions papers</a>
				</div>


			
			<section class="programmes-section-2">
				{
					files.map((e) => (
						<div class="timetable" id={"day-" + e.day}>
							<div class="top">
								<h2 class="date">
									Day {e.day}: {e.date}
								</h2>
							</div>
							<div class="bottom">
								<div class="item-container">
									{e.data.map((timeslot) => (
										<TimelineItem
											or={timeslot.or}
											time={timeslot.time}
											day={e.day}
											name={timeslot.item.map((data) => ({
												text: data.text,
												author: data.author,
												location: data.location,
												hasInfo: data.hasInfo,
												info: data.info,
												contact: data.contact,
												href: data.href,
											}))}
										/>
									))}
								</div>
							</div>
						</div>
					))
				}
			</section>
			<section class="programmes-section-2">
				<PreFooterModular
					title="CHECK OUT:"
					buttons={[
						{ text: "All Workshops", href: "/workshops/0" },
						{ text: "All Keynotes", href: "/keynotes" },
					]}
				/>
			</section>

			<section class="popup">
				<div class="info-card">
					<div class="info-card-top">
						<button class="info-card-button prev-button"> {"<"} </button>
						<div class="session-info">
							<p class="session-title">
								Some Text Here: Here Too
							</p>
							<p class="session-time">Some Text Here: Here Too</p>
						</div>
						<button class="exit" id="exit">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="#000000"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="feather feather-x"
								><line x1="18" y1="6" x2="6" y2="18"
								></line><line x1="6" y1="6" x2="18" y2="18"
								></line></svg
							>
						</button>
						<button class="info-card-button next-button"> ></button>
					</div>
					<article class="details">
						<div class="content-1" id="details">
							<button class="exit" id="exit">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									width="24"
									height="24"
									viewBox="0 0 24 24"
									fill="#000000"
									stroke="currentColor"
									stroke-width="2"
									stroke-linecap="round"
									stroke-linejoin="round"
									class="feather feather-x"
									><line x1="18" y1="6" x2="6" y2="18"
									></line><line x1="6" y1="6" x2="18" y2="18"
									></line></svg
								>
							</button>
						</div>
					</article>
				</div>

				<!-- <div class="info-card">
					<article class="details" id="details">
						<h1>Some Title</h1>
						<button class="exit" id="exit">
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#000000" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
						</button>
					</article>
				</div> -->
			</section>
		</content>
	</main>

	<Footer client:visible/>
</Layout>

<script>
	var currentIndex = 0;
	//Lookup system to get elements with templates
	var templates = {};
	var elements = [];
	var key = 0;
	document.querySelectorAll(".hasInfo").forEach((e) => {
		if (e.querySelector("template")) {
			templates[key] = e;
			key++;
		}
	});

	//Toggle Search Box
	document.getElementById("exit-search").addEventListener('click', () => {
						document.querySelector(".search-box").classList.remove("search-active");
					})

					document.getElementById("toggle-search").addEventListener('click', () => {
						console.log("clicked")
						if(document.querySelector(".search-box").classList.contains("search-active")){
							document.querySelector(".search-box").classList.remove("search-active");
						} else {
							document.querySelector(".search-box").classList.add("search-active");
						}
						
					})

	const timetables = document.querySelectorAll('.timetable')

		document.addEventListener('scroll', (e) => {
		// console.log("Scrolling")
		if(window.innerWidth < 1301){
			timetables.forEach((e) => {
			if(e.getBoundingClientRect().top < window.innerHeight / 4
				&& e.getBoundingClientRect().bottom > window.innerHeight / 4){
					if(!document.querySelector(`a[href="#${e.id}"]`).getAttribute('style')){
						document.querySelector(".programmes-nav").querySelectorAll("[style]").forEach((item) => {
							item.removeAttribute('style')
						})
						document.querySelector(`a[href="#${e.id}"]`).setAttribute('style', 'color: var(--color-bg) !important; background-color: #002c38')
						
					}

					
			}
		})
		} 
		// else {
		// 	document.querySelector(".programmes-nav").querySelectorAll("[style]").forEach((item) => {
		// 					item.removeAttribute('style')
		// 				})
		// }
		
	})

	window.addEventListener("popstate", () => {
		console.log("pop")
		findDataFromUrl();
		if(document.querySelector(".search-box").classList.contains("search-active")){
			document.querySelector(".search-box").classList.remove("search-active");
		}
	});

	function findDataFromUrl(){
		const urlParams = new URLSearchParams(window.location.search);
		const qParam = urlParams.get('q');
		const kParam = urlParams.get('k');
		var prevParam
		
		if(qParam){
			const wTitle = document.querySelectorAll(".hasInfo")
			wTitle.forEach((e) => {
			if(e.querySelector(".session-name").innerText.toLowerCase().replace(/\s/g, '') == decodeURI(qParam).toLowerCase().replace(/\s/g, '')){
				prevParam = decodeURI(qParam).toLowerCase().replace(/\s/g, '')
				console.log(e.querySelector(".session-name").innerText.toLowerCase().replace(/\s/g, ''))
				console.log(decodeURI(qParam).toLowerCase().replace(/\s/g, ''))
				checkUrl(e)
			}
		})
		} else if(kParam){
			const wTitle = document.querySelectorAll(`.info-card-title`)
			// const allSessions = document.querySelectorAll("template")
			// const allProgrammes = allSessions.forEach((e) => {
			// 	console.log(e.querySelector(`.info-card-title`))
			// })
			
			// console.log(e.querySelector(".session-name").innerText.toLowerCase().replace(/\s/g, ''))
			console.log(decodeURI(qParam).toLowerCase().replace(/\s/g, ''))
		}
	}


	function highlight(target) {
		document.querySelectorAll(".animate-highlight").forEach((e) => {
			e.classList.remove("animate-highlight");
		});
		if (target != "a") {
			console.log("Highlight");
			let url = window.location.href;
			let getID = url.split("#")[1];
			if (document.getElementById(getID) != null) {
				document
					.getElementById(getID)
					.classList.add("animate-highlight");
				console.log("Get ID " + document.getElementById(getID));
			}
		} else {
			document
				.querySelector("[scroll-target]")
				.classList.add("animate-highlight");
		}
	}
	// highlight();
	window.addEventListener("hashchange", (e) => {
		highlight();
	});

	const quickNav = document.getElementById("programmes-nav");
	const quickNavTrigger = document.getElementById("programmes-nav-trigger");
	window.addEventListener("scroll", (e) => {
		if (quickNav && quickNavTrigger) {
			if (window.innerWidth > 830) {
				if (quickNavTrigger.getBoundingClientRect().bottom <= 1) {
					quickNav.classList.add("detach");
					quickNavTrigger.classList.add("programmes-nav-trigger");
				} else {
					quickNav.classList.remove("detach");
					quickNavTrigger.classList.remove("programmes-nav-trigger");
					document.querySelector(".programmes-nav").querySelectorAll("[style]").forEach((item) => {
							item.removeAttribute('style')
						})
				}
			} else {
				if (quickNavTrigger.getBoundingClientRect().bottom <= 70) {
					quickNav.classList.add("detach");
					quickNavTrigger.classList.add("programmes-nav-trigger");
				} else {
					quickNav.classList.remove("detach");
					quickNavTrigger.classList.remove("programmes-nav-trigger");
					document.querySelector(".programmes-nav").querySelectorAll("[style]").forEach((item) => {
							item.removeAttribute('style')
						})
				}
			}
		}
	});

	document.getElementById("exit").addEventListener("click", () => {
		closePopup();
		highlight("a");
	});
	function closePopup() {
		document.querySelector(".popup").classList.remove("popup-show");
		document.querySelector(".info-card").classList.remove("info-card-show");
		const template = templates[currentIndex].querySelector("template");
		scrollToTarget(template.getAttribute("data-session"));
	}

	document.querySelector(".session-info").addEventListener("click", () => {
		document.querySelector(".popup").classList.remove("popup-show");
		document.querySelector(".info-card").classList.remove("info-card-show");
	});

	document.querySelector(".session-time").addEventListener("click", () => {
		document.querySelector(".popup").classList.remove("popup-show");
		document.querySelector(".info-card").classList.remove("info-card-show");
	});

	document.querySelectorAll(".programmes-nav-button").forEach((e) => {
		e.addEventListener("click", () => {
		const url = new URL(location);
				url.searchParams.delete(
					"q"
				);
				history.pushState({}, "", url);
	})
	})

	//Check for clickable elements then add checkURL function to query popup
	document.querySelectorAll(".hasInfo").forEach((e) => {

		e.addEventListener("click", () => {
			checkUrl(e);
		})
		
	});

	function showPopup(){
		document.querySelector(".popup").classList.add("popup-show");
				document
					.querySelector(".info-card")
					.classList.add("info-card-show");
				document.querySelector("#details").scrollTop = 0;
	}

	//check element then add query param to show popup
	function checkUrl(e){
		const template = e.querySelector("template");
		if (template) {
			const url = new URL(location);
				url.searchParams.set(
					"q",
					encodeURI(e.querySelector(".session-name").innerText)
				);
				history.pushState({}, "", url);
				document.querySelector(".session-title").innerText =
					e.querySelector(".session-name").innerText;

				document.querySelector(".session-time").innerText =
					template.getAttribute("data-time");

				//Get Keys to update index
				const findKey = Object.keys(templates).find(
					(thiskey) =>
						templates[thiskey].querySelector("template").dataset
							.session ===
						e.querySelector(".session-name").innerText
				);

				// console.log(e.querySelector(".session-name").innerText)

				currentIndex = parseInt(findKey);
				console.log(currentIndex);

				scrollToTarget(e.querySelector(".session-name").innerText);
				showPopup(e)


				//Append template content to popup
				const content = template.content.cloneNode(true);
				console.log("Content " + content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);

				updateButtons();
		} 
		// else {
			
		// 		const urlParams = new URLSearchParams(window.location.search);
		// 		const titleQuery = urlParams.get('q');
		// 		const targetTemplate = document.querySelector(`[data-title=${titleQuery}]`);
		// 		document.querySelector(".session-title").innerText =
		// 			targetTemplate.querySelector(`data-title`).innerText;

		// 		document.querySelector(".session-time").innerText =
		// 			targetTemplate.getAttribute("data-time");

		// 		//Get Keys to update index
		// 		const findKey = Object.keys(templates).find(
		// 			(thiskey) =>
		// 				templates[thiskey].querySelector("template").dataset
		// 					.session ===
		// 				targetTemplate.querySelector(".session-name").innerText
		// 		);

		// 		// console.log(e.querySelector(".session-name").innerText)

		// 		currentIndex = parseInt(findKey);
		// 		console.log(currentIndex);

		// 		scrollToTarget(e.querySelector(".session-name").innerText);
		// 		showPopup(e)


		// 		//Append template content to popup
		// 		const content = template.content.cloneNode(true);
		// 		console.log("Content " + content);
		// 		document.querySelector(".content-1").innerHTML = "";
		// 		document.querySelector(".content-1").appendChild(content);

		// 		updateButtons();
		// }
		
	}

	document.querySelectorAll(".next-button").forEach((e) => {
		e.addEventListener("click", () => {
			console.log(currentIndex);
			if (templates[currentIndex + 1] != undefined) {
				currentIndex++;
				console.log(currentIndex);
				const template =
					templates[currentIndex].querySelector("template");

				document.querySelector(".session-title").innerText =
					template.getAttribute("data-session");
				document.querySelector(".session-time").innerText =
					template.getAttribute("data-time");
				
				const content = template.content.cloneNode(true);
				console.log(content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);
				updateButtons();
			} else {
				console.log("Fail");
				console.log(templates[currentIndex + 1]);
			}
		});
	});

	document.querySelectorAll(".prev-button").forEach((e) => {
		e.addEventListener("click", () => {
			if (templates[currentIndex - 1] != undefined) {
				console.log("Prev");
				currentIndex--;

				const template =
					templates[currentIndex].querySelector("template");

				document.querySelector(".session-title").innerText =
					template.getAttribute("data-session");
				document.querySelector(".session-time").innerText =
					template.getAttribute("data-time");
				
				const content = template.content.cloneNode(true);
				// console.log(content);
				document.querySelector(".content-1").innerHTML = "";
				document.querySelector(".content-1").appendChild(content);
				updateButtons();
			} else {
				console.log("Fail");
				console.log(currentIndex);
			}
		});
	});

	//Long press and hold

	// let timeoutId;
	// let intervalId;
	// document.querySelectorAll(".prev-button").forEach((e) => {
	// 	//Click and hold to cycle

	// 	element.addEventListener("mousedown", () => {
	// 		timeoutId = setTimeout(
	// 			() =>
	// 				(intervalId = setInterval(() => {
	// 					if (templates[currentIndex - 1] != undefined) {
	// 						console.log("Prev");
	// 						currentIndex--;
	// 						const template =
	// 							templates[currentIndex].querySelector(
	// 								"template"
	// 							);
	// 						document.querySelector(".session-title").innerText =
	// 							template.getAttribute("data-session");
	// 						document.querySelector(".session-time").innerText =
	// 							template.getAttribute("data-time");
	// 						scrollToTarget(
	// 							template.getAttribute("data-session")
	// 						);
	// 						const content = template.content.cloneNode(true);
	// 						console.log(content);
	// 						document.querySelector(".content-1").innerHTML = "";
	// 						document
	// 							.querySelector(".content-1")
	// 							.appendChild(content);
	// 						updateButtons();
	// 					} else {
	// 						console.log("Fail");
	// 						console.log(currentIndex);
	// 					}
	// 				}, 200)),
	// 			1000
	// 		);
	// 	});

	// 	element.addEventListener("mouseup", () => {
	// 		clearTimeout(timeoutId);
	// 	});
	// });

	

	function updateButtons() {
		//Lookup system
		const findKey = Object.keys(templates).find(
			(key) =>{
				templates[key].querySelector("template").dataset.session ===
				document.querySelector(".session-title").innerText
				document.querySelector("#details").scrollTop = 0;
			}
				
		);

		if (findKey < 1) {
			document.querySelectorAll(".prev-button").forEach((e) => {
				if (!e.classList.contains("clamp")) {
					e.classList.add("clamp");
				}
			});

			document.querySelectorAll(".next-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
		} else if (findKey >= Object.keys(templates).length - 1) {
			document.querySelectorAll(".prev-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
			document.querySelectorAll(".next-button").forEach((e) => {
				if (!e.classList.contains("clamp")) {
					e.classList.add("clamp");
				}
			});
		} else {
			document.querySelectorAll(".next-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
			document.querySelectorAll(".prev-button").forEach((e) => {
				if (e.classList.contains("clamp")) {
					e.classList.remove("clamp");
				}
			});
		}
	}

	function scrollToTarget(data) {
		document.querySelectorAll("template").forEach((e) => {
			if (e.getAttribute("data-session") == data) {
				document.querySelectorAll("[scroll-target]").forEach((e) => {
					e.removeAttribute("scroll-target");
				});
				e.parentElement.setAttribute("scroll-target", "");
				document.querySelector("[scroll-target]").scrollIntoView();
			}
		});
	}
	
	</script>



<style>
	* {
		margin: 0%;
	}

	#result{
		overflow-y: scroll;
		width: calc(92vw - 1em);
		max-width: calc(1000px - 1em);
	}

	#resultCount{
		width: 100px;
		font-size: 0.8em;
		text-align: right;
		opacity: 0.7;
	}

	.searchTitle{
		margin: 0px;
	}

	.pdf-version{
		padding: 0.5em 1em !important;
		background-color: #FFC22300;
		transition: background-color 0.2s;
	}

	.pdf-version:hover{
		background-color: #FFC22399;
	}

	.pdf-version img{
		height: 40px;
		margin-right: 1em;
	}

	.popup {
		position: fixed;
		display: flex;
		top: 100%;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1em 0em;
		background: #002c38;
		background-color: rgba(0, 0, 0, 0.5);
		display: flex;
		z-index: 100;
		pointer-events: none;
		top: 0%;
		scale: 1;
		opacity: 0;
		transition: opacity 0.5s, top 0.5s ease-in-out, scale 0.2s ease-out;
		justify-content: center;
	}

	.popup-show {
		top: 0%;
		scale: 1;
		opacity: 1;
		pointer-events: auto;
	}

	.clamp {
		color: #002c3822 !important;
		pointer-events: none;
	}

	.info-card {
		position: fixed;
		top: 200vh;
		left: 50%;
		transform: translateX(-50%) translateY(-50%);
		display: flex;
		flex-direction: column;
		background-color: #fcf7eb;
		max-width: 700px;
		width: 100%;
		height: 85%;
		max-height: 1100px;
		transition: opacity 0.1s, top 0.4s;
		border-radius: 5px;
		pointer-events: none;
	}

	.search{
		position: fixed;
		justify-content: center;
		z-index: 10000;
		right: 20px;
		bottom: 15px;
		width: 100px;
		height: 45px;
		transform: translate(0, 0);
		display: flex;
		flex-direction: row;
		align-items: center;
		box-shadow: 0px 0px 10px #00000033;
		transition: 0.3s all ease-in-out;

	}


	#search{
		border-radius: 9px;
		border: 2px solid #002C38;
		background: #ffffffcc !important;
		padding: 0.3em;
		display: flex;
		align-items: center;
		opacity: 0;
		transition: 0.2s all;
		
	}

	.search-active #search{
		opacity: 1;
	}

	.search-box{
		position: fixed;
		justify-content: top;
		z-index: 10000;
		display: flex;
		flex-direction: column;
		align-items: top;
		border-radius: 20px;
		box-shadow: 0px 0px 10px #00000033;
		padding: 1em;
		background-color: #fcf7ebfb;
		color: var(--color-text);
		width: 0vw;
		right: 25px;
		bottom: 15px;
		width: 50px;
		height: 40px;
		transition: all 0.5s;
		overflow: hidden;
		max-width: 1000px;
	}

	.search-active{
		width: 92vw;
		
		transform: translate(50%, 50%);

		height: 85vh;
		right: 50%;
		bottom: 50%;
	}


	input{
		all: unset;
		/* padding: 0.5em;
		border-radius: 9px;
		border: 0px solid #002C38; */
		/* border-radius: 9px;
		border: 2px solid #002C38; */
		font-family: sans-serif;
		width: 100%;
		color: #002C38;
		height: 20px;
		background: #ffffffcc !important;
	}

	input::placeholder{
		color: #002C3899 !important;
	}

	.input-field label{
		padding-bottom: 0.2em;
	}



	.search img{
		margin-right: 5px;
	}

	.search:active img > path{
		fill: var(--color-text);
	}

	.info-card {
		padding: 0em;
	}

	.info-card-top {
		display: flex;
		width: 100%;
		/* border: 1px solid #002c38; */
	}

	.info-card-button {
		padding: 1em;
		color: #002c38;
		/* border: #002c38 1px solid; */
		border-radius: 2px;
		background-color: #00000000;
	}

	.info-card-show {
		top: 50%;
		left: 50%;
		transform: translateX(-50%) translateY(-50%);
		scale: 1;
		opacity: 1;
		pointer-events: all;
	}

	.info-card-button:first-child {
		border-right: 1px solid #002c38;
		border-bottom: 1px solid #002c38;
	}
	.info-card-button:nth-child(4) {
		border-left: 1px solid #002c38;
		border-bottom: 1px solid #002c38;
	}

	.session-info {
		display: flex;
		flex-direction: column;
		padding: 0.5em;
		width: 100%;
		border-left: 0px;
		border-right: 0px;
		align-items: center;
		border-bottom: 1px solid #002c38;
		pointer-events: all;
	}

	.session-title {
		width: 100%;
		display: flex;
		font-weight: 1000;
		align-items: center;
	}

	.session-time {
		width: 100%;
		font-size: medium;
		padding-top: 0.5em;
	}

	.exit {
		border-bottom: 1px solid #002c38;
		border-radius: 0px;
	}

	.content-1 {
		padding: 2em;
		padding-top: 0%;
		overflow-y: scroll;
		height: 100%;
		/* border: #002c38 1px solid; */
		border-top: 0px;
	}

	.nav-offset {
		position: relative;
		top: -150px;
	}

	.programmes-nav-trigger {
		margin-bottom: 80px !important;
	}

	.programmes-nav {
		position: relative;
		display: flex;
		background-color: var(--color-bg);
		width: calc(100vw - 14em);
		margin: 0%;
		padding: 1em;
		padding-left: 2em;
		padding-right: 2em;
		z-index: 100;
	}

	.programmes-nav p {
		width: 100%;
		max-width: 100px;
		display: flex;
		text-align: left;
		align-items: center;
		justify-content: left;
	}

	.programmes-nav-button {
		position: relative;
		display: flex;
		flex-direction: row;
		width: 100%;
		max-width: 100px;
		align-items: center;
		justify-content: center;
		margin: 0em 0.3em;
		padding: 0.5em;
		font-weight: bold;
		font-size: 0.9em;
		border-radius: 10px;
		color: #002c38;
		/* background-color: #fcf7eb; */
		border: 2px solid #002c38;
	}

	.programmes-nav-button:focus {
		background-color: #002c3844;
	}

	.detach {
		position: fixed;
		top: 0px;
		border-bottom: 1px solid #002c38;
	}

	.line {
		width: 5px;
		border-left: solid 5px #002c38;
		border-radius: 5px;
		margin-top: 1em;
		margin-right: 0.5em;
		margin-bottom: 3em;
	}

	.left {
		left: -100%;
	}

	.right {
		right: 100%;
	}

	.timetable {
		margin-top: 1em;
		margin-bottom: 1em;
		scroll-margin-top: 15vh;
		border-radius: 15px;
		padding: 1em;
		position: relative;
		width: calc(50% - 1em);
		display: flex;
		flex-direction: column;
		background-color: #fffcf9aa;
		box-shadow: 0px 0px 50px #00000011;
	}

	.timetable:nth-child(odd) {
		margin-right: 1em;
	}
	.timetable:nth-child(even) {
		margin-left: 1em;
	}

	.bottom {
		display: flex;
	}

	.date {
		font-weight: ;
		margin-bottom: 0.5em;
	}

	content {
		border-bottom: 1px solid #002c38;
	}

	.hollow-button{
		background-color: var(--color-bg)
	}

	p a {
		text-decoration: underline !important;
	}

	#details::-webkit-scrollbar {
		width: 5px;
	}

	/* Track */
	#details::-webkit-scrollbar-track {
		background: #002c3844;
		border-radius: 10px;
	}

	/* #details::-webkit-scrollbar-track:hover{
	background: #ffffff33;
	} */

	/* Handle */
	#details::-webkit-scrollbar-thumb {
		background-color: #002c38;
		border-radius: 10px;
	}

	/* Handle on hover */
	#details::-webkit-scrollbar-thumb:hover {
		background: #555;
	}

	main {
		display: flex;
		flex-direction: row;
		overscroll-behavior: none;
		/* overflow-y: scroll */
		/* height: 300vh;
		padding-left: 14em; */
		/* margin-left: 14em; */
		/* position: absolute; */
	}

	label {
		font-family: "AH-B";
	}

	content {
		width: 100%;
	}

	.solid-line {
		width: 100%;
		border-top: 2px solid #002c38;
	}

	.hover-popup {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1em 0em;
		background: #002c38;
		background-color: rgba(0, 0, 0, 0.5);
		display: flex;
		z-index: 100;
		pointer-events: none;
		top: 0%;
		scale: 1;
		opacity: 0;
		transition: opacity 0.5s, top 0.5s ease-in-out, scale 0.2s ease-out;
		justify-content: center;
	}

	.popup {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1em 0em;
		background: #002c38;
		background-color: rgba(0, 0, 0, 0.5);
		display: flex;
		z-index: 100;
		pointer-events: none;
		top: 0%;
		scale: 1;
		opacity: 0;
		transition: opacity 0.5s, top 0.5s ease-in-out, scale 0.2s ease-out;
		justify-content: center;
	}

	.popup-show {
		top: 0%;
		scale: 1;
		opacity: 1;
		pointer-events: auto;
	}

	#workshop-description {
		display: flex;
		flex-direction: column;
		/* margin-right: 1em; */
		padding-right: 1em;
	}

	.info-card h1 {
		padding-bottom: 0.5em;
		margin: 0px;
		font-size: 2em;
		height: min-content;
	}

	.info-card h2 {
		padding: 0em;
		padding-bottom: 0.2em;
		margin: 0px;
		font-size: 1.3em;
		height: min-content;
		font-weight: 100;
	}

	.details {
		overflow-y: hidden;
		height: 100%;
		/* padding-right: 1em; */
	}

	.programmes-section-1 {
		padding: 2em;
		display: flex;
		width: 100%;
		justify-content: space-between;
	}

	.programmes-section-2 {
		display: flex;
		padding: 2em;
		flex-wrap: wrap;
		max-width: 1800px;
		border-bottom: 1px solid #002c38;
	}

	.programmes-section-2:last-child {
		border-bottom: 0px solid #002c38;
	}

	.exit {
		display: flex;
		position: relative;
		background-color: #00000000;
		color: #002c38;
		align-items: center;
	}

	.center {
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	.button-padding h2 {
		padding: 0.1em 1em;
		border-radius: 50px;
	}

	.center * {
		margin: auto;
	}

	.sub-types {
		background-color: #002c38;
		color: #fcf7eb;
		border-radius: 30px;
		padding: 0.5em 0em 0.5em 0em;
		margin-bottom: 1em;
		margin-top: 1em;
		display: flex;
		flex-direction: column;
		/* width: max-content; */
		/* height: 100%; */
		/* width: 100%; */
	}

	.selection-grid {
		display: grid;
		width: 100%;
		gap: 1em;
		max-width: 1200px;
		grid-template-columns: 1fr 1fr;
		padding: 1em;
		flex-wrap: wrap;
	}

	.item-container {
		width: 100%;
	}

	.items {
		display: block;
	}

	.items p {
		/* display: flex; */
		margin: 0px;
	}

	.no-margin {
		margin: 0px;
		padding: 0px;
	}

	.no-margin * {
		margin: 0px !important;
		padding: 0px;
	}

	p strong {
		/* all: unset; */
		display: flex;
		width: max-content;
		padding: 0px;
		padding-right: 0.4em;
		font-size: 1em;
	}

	.sub-types h3 {
		margin: 0px;
		padding: 0.2em;
		padding-left: 1em;
		padding-bottom: 0.5em;
		font-family: "AH-B";
	}

	.sub-details {
		display: flex;
		flex-direction: column;
		justify-content: center;
		/* padding-left: 1em; */
	}

	.submissions {
		position: relative;
		justify-content: center;
		align-items: center;
	}


	.link-card p {
		margin: 0%;
	}

	.contact-details h4 {
		margin: 0%;
		font-family: "AH-B";
	}

	.contact-details p {
		margin-top: 0%;
	}

	.juries-details {
		display: flex;
	}

	.juries-section {
		display: flex;
		display: block;
		align-content: space-between;
		padding-bottom: 4em;
	}

	.juries-section:last-child {
		display: flex;
		display: block;
		align-content: space-between;
		padding-bottom: 0%;
	}

	.text-details {
		justify-content: center;
		align-content: center;
		text-align: center;
	}

	.nav-container {
		width: 14em;
	}

	.img-mask {
		max-height: 450px;
		overflow: hidden;
	}

	.rch {
		width: 100%;
		/* max-height: 473px; */
		object-fit: cover;
	}

	.stretch {
		box-sizing: border-box;
		display: flex;
		width: 100%;
		/* height: 100%; */
	}

	.pill {
		font-family: "AH-B";
		font-size: 1em;
		margin: 0px;
		display: flex;
		padding: 0.2em 0.5em 0.2em 0.5em;
		background-color: #002c38;
		color: #fcf7eb;
		border-radius: 50px;
		align-items: center;
		width: fit-content;
	}

	.pill img {
		margin: 0%;
		padding-right: 0.5em;
		width: 1em;
		height: 1em;
	}

	.location-detail {
		align-items: flex-end;
		margin-top: auto;
		margin-bottom: 0%;
		margin-left: 2em;
		white-space: nowrap;
		width: max-content;
	}

	.title {
		font-family: "S-B";
		/* height: 50%; */
		padding: 0em;
		/* padding-bottom: 3em; */
		margin: 0%;
		font-size: 1em;
		/* overflow: hidden; */
		/* width: 200%; */
	}

	.title h1 {
		margin: 0%;
		padding: 0%;
		font-size: 2.5em;
	}

	.conditions {
		padding-top: 2em;
	}

	/* Presets */

	.bold {
		font-family: "AH-B";
	}

	.thin {
		font-family: "S-R";
	}

	@media screen and (max-width: 1300px) {
		.programmes-section-1{
			flex-direction: column;
			justify-content: left;
		}
	
		.pdf-version{
			padding: 0.5em;
			margin-top: 1em;
			margin-right: auto;
			width: auto;
			margin-left: 0.3em;
		}

		.pdf-version img{
			height: 30px;
		}

		.popup {
			padding: 0%;
			position: fixed;
			border-radius: 0px;
			z-index: 10000;
		}

		.programmes-nav {
			padding: 1em;
		}

		.info-card {
			width: 100%;
			border-radius: 5px;
		}

		.selection-grid {
			display: grid;
			width: 100%;
			gap: 1em;
			grid-template-columns: 1fr;
			padding: 1em;
			flex-wrap: wrap;
		}
		.programmes-section-1 {
			padding: 1em;
		}

		.title {
			font-size: 0.8em;
		}

		.programmes-section-2 {
			padding: 1em;
		}

		.timetable {
			width: 100%;
		}

		.timetable:nth-child(odd) {
			margin-right: 0em;
		}
		.timetable:nth-child(even) {
			margin-left: 0em;
		}
		.content-1 {
			padding: 2em;
			padding-top: 0em;
			overflow-y: scroll;
			height: 100%;
			/* border: #002c38 1px solid; */
			border-top: 0px;
		}
	}

	@media (max-width: 829px) {

		.pdf-version{
			padding: 0.5em;
			margin-top: 1em;
			margin-bottom: 0.5em;
			margin-right: auto;
			width: auto;
		}

		.info-card {
			padding: 0em;
			border-radius: 0px;
			height: 100%;
			max-height: 100vh;
		}

		.info-card-top {
			display: flex;
			width: 100%;
			border: 1px solid #002c38;
		}

		.info-card-button {
			padding: 1em;
			color: #002c38;
			/* border: #002c38 1px solid; */
			border-radius: 2px;
			background-color: #00000000;
		}

		.info-card-button:first-child {
			border-right: 1px solid #002c38;
		}
		.info-card-button:nth-child(4) {
			border-left: 1px solid #002c38;
		}
		.session-title {
			display: flex;
			align-items: center;
			padding: 0.5em;
			width: 100%;
			border-left: 0px;
			border-right: 0px;
			border-bottom: 0px;
		}
		.content-1 {
			padding: 2em;
			padding-top: 0%;
			overflow-y: scroll;
			height: 100%;
			border: #002c38 1px solid;
			border-top: 0px;
		}
		.time {
			padding: 0.5em;
			padding-left: 0.5em;
			padding-right: 0.5em;
		}

		.programmes-nav {
			position: relative;
			display: flex;
			background-color: var(--color-bg);
			width: 100%;
			margin: 0%;
			padding: 0em 1em;
			z-index: 100;
		}

		.programmes-nav p {
			padding-left: 1em;
			width: 100%;
			display: flex;
			text-align: left;
			align-items: center;
			justify-content: left;
		}

		.title {
			font-size: 0.8em;
		}

		.programmes-nav-button {
			position: relative;
			display: flex;
			flex-direction: row;
			width: 100%;
			align-items: center;
			justify-content: center;
			margin: 0em 0.3em;
			padding: 0.5em 0.3em;
			font-weight: bold;
			font-size: 0.9em;
			border-radius: 10px;
			/* border-right: 1px solid #002c38; */
		}

		

		.clamp {
			color: #002c3855;
			pointer-events: none;
		}

		.detach {
			padding-top: 0.2em;
			padding-bottom: 1em;
			position: fixed;
			padding-top: 1em;
			top: 76px;
		}

		.timetable:nth-child(odd) {
			margin-right: 0em;
		}
		.timetable:nth-child(even) {
			margin-left: 0em;
		}

		.content-1 {
			padding: 2em;
			padding-top: 0%;
			overflow-y: scroll;
			height: 100%;
			border: #002c38 1px solid;
			border-top: 0px;
		}

		main {
			display: flex;
			flex-direction: column;
		}
	}
</style>
